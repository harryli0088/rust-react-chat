(this.webpackJsonpclient=this.webpackJsonpclient||[]).push([[0],{29:function(e){e.exports=JSON.parse('{"name":"client","version":"2.0.1","private":true,"dependencies":{"@fortawesome/fontawesome-svg-core":"^1.2.36","@fortawesome/free-brands-svg-icons":"^5.15.4","@fortawesome/free-solid-svg-icons":"^5.15.4","@fortawesome/react-fontawesome":"^0.1.15","@testing-library/jest-dom":"^5.11.6","@testing-library/react":"^11.2.2","@testing-library/user-event":"^12.6.0","@types/jest":"^26.0.19","@types/node":"^12.19.9","@types/react":"^16.14.2","@types/react-dom":"^16.9.10","gh-pages":"^3.1.0","jsonschema":"^1.4.0","react":"^17.0.1","react-dom":"^17.0.1","react-router-dom":"^5.2.0","react-scripts":"^4.0.3","sass":"^1.41.1","typescript":"^4.1.3","web-vitals":"^0.2.4"},"scripts":{"start":"react-scripts start","build":"react-scripts build","test":"react-scripts test","eject":"react-scripts eject","predeploy":"npm run build","deploy":"gh-pages -d build"},"eslintConfig":{"extends":["react-app","react-app/jest"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"homepage":"https://harryli0088.github.io/rust-react-chat","devDependencies":{"@types/react-router-dom":"^5.1.7"}}')},38:function(e,t,n){},46:function(e,t,n){},47:function(e,t,n){},48:function(e,t,n){},49:function(e,t,n){},52:function(e,t,n){"use strict";n.r(t);var r=n(1),s=n.n(r),c=n(26),i=n.n(c),a=(n(38),n(14)),o=n(12),d=n(4),l=n.n(d),h=n(8),p=n(27),u=n(28),b=n(33),j=n(32),y=n(3),m=n(7),v=n(6),f=n(22),x=n(29),O=n(19);function w(e){return String.fromCharCode.apply(String,Object(O.a)(e))}function k(e,t){return g.apply(this,arguments)}function g(){return(g=Object(h.a)(l.a.mark((function e(t,n){var r,s,c;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=(new TextEncoder).encode(t),s=crypto.getRandomValues(new Uint8Array(12)),e.next=4,window.crypto.subtle.encrypt({name:"AES-GCM",iv:s},n,r);case 4:return c=e.sent,e.abrupt("return",{cipher:btoa(w(new Uint8Array(c))),initialization_vector:btoa(w(s))});case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function S(){return(S=Object(h.a)(l.a.mark((function e(){var t,n,r;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-256"},!0,["deriveKey","deriveBits"]);case 2:return t=e.sent,e.next=5,window.crypto.subtle.exportKey("jwk",t.publicKey);case 5:return n=e.sent,e.next=8,window.crypto.subtle.exportKey("jwk",t.privateKey);case 8:return r=e.sent,e.abrupt("return",{publicKeyJwk:n,privateKeyJwk:r});case 10:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var K;function C(e,t){return A.apply(this,arguments)}function A(){return(A=Object(h.a)(l.a.mark((function e(t,n){var r,s;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.crypto.subtle.importKey("jwk",t,{name:"ECDH",namedCurve:"P-256"},!0,[]);case 2:return r=e.sent,e.next=5,window.crypto.subtle.importKey("jwk",n,{name:"ECDH",namedCurve:"P-256"},!0,["deriveKey","deriveBits"]);case 5:return s=e.sent,e.next=8,window.crypto.subtle.deriveKey({name:"ECDH",public:r},s,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);case 8:return e.abrupt("return",e.sent);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function E(e){return Uint8Array.from(Object(O.a)(e).map((function(e){return e.charCodeAt(0)})))}function D(e,t){return R.apply(this,arguments)}function R(){return(R=Object(h.a)(l.a.mark((function e(t,n){var r,s;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=E(atob(t.cipher)),e.next=3,window.crypto.subtle.decrypt({name:"AES-GCM",iv:E(atob(t.initialization_vector))},n,r);case 3:return s=e.sent,e.abrupt("return",(new TextDecoder).decode(s));case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}!function(e){e[e.connected=0]="connected",e[e.disconnected=1]="disconnected"}(K||(K={}));var J=n(0),P=function(e){return Object(J.jsx)("a",Object(a.a)(Object(a.a)({},e),{},{target:"_blank",rel:"noopener noreferrer",children:e.children}))},I=(n(46),function(e){var t=e.content,n=e.senderAddr,s=e.showSenderAddr,c=e.type,i=s?Object(J.jsx)("div",{className:"sender",children:"self"===n?"You":n}):null,a=Object(r.useMemo)((function(){if("encrypted"===c&&"self"!==n){var e=t,r=Object(o.a)(e,3),s=r[0],i=r[1],a=r[2];return Object(J.jsxs)("div",{children:[Object(J.jsx)("pre",{className:"chatPre",children:a}),Object(J.jsx)("hr",{}),Object(J.jsx)("pre",{children:"Cipher: ".concat(s,"\nInitialization Vector: ").concat(i)})]})}return t?Object(J.jsx)("pre",{className:"chatPre",children:t}):t}),[t,n,c]),d="encrypted"===c?Object(J.jsx)(m.a,{className:"green",icon:v.e,title:"This message was encrypted"}):"plaintext"===c?Object(J.jsx)(m.a,{className:"red",icon:v.f,title:"This message was sent as plaintext"}):void 0;return t?Object(J.jsx)("div",{className:"message-container",children:Object(J.jsx)("div",{className:"message ".concat(n," ").concat(c),children:Object(J.jsxs)("div",{children:[i,Object(J.jsxs)("div",{style:{alignItems:"center",display:"flex",flexDirection:"self"===n?"row-reverse":"row"},children:[Object(J.jsx)("span",{className:"content",children:a}),Object(J.jsx)("span",{style:{color:"gray",marginLeft:"0.5em",marginRight:"0.5em"},children:d})]})]})})}):null}),N=(n(47),function(e){return Object(J.jsx)("div",{className:"renderKey",children:Object(J.jsx)("pre",{children:JSON.stringify(e.jsonWebKey,void 0,2)})})}),M=(n(48),function(e){var t=e.derivedKey,n=e.publicKeyJwk,c=e.senderAddr,i=Object(r.useState)(null),a=Object(o.a)(i,2),d=a[0],l=a[1],h=Object(r.useState)(!1),p=Object(o.a)(h,2),u=p[0],b=p[1];return Object(r.useEffect)((function(){window.crypto.subtle.exportKey("jwk",t).then((function(e){l(e)})).catch(console.error)}),[t]),Object(J.jsxs)("div",{className:"displaySender blob",children:[Object(J.jsx)("div",{children:c}),Object(J.jsx)("hr",{}),Object(J.jsxs)("div",{children:["Public Key ",Object(J.jsx)(m.a,{icon:v.d})]}),Object(J.jsx)(N,{jsonWebKey:n}),d&&Object(J.jsxs)(s.a.Fragment,{children:[Object(J.jsx)("br",{}),Object(J.jsxs)("div",{children:["Derived Key ",Object(J.jsx)(m.a,{className:"interact",icon:u?v.b:v.c,onClick:function(){return b(!u)}})]}),u&&Object(J.jsx)(N,{jsonWebKey:d})]})]})}),B=function(e){var t=Object(r.useState)(!1),n=Object(o.a)(t,2),s=n[0],c=n[1];return Object(J.jsxs)("div",{children:[Object(J.jsxs)("h4",{children:["Your Private Key ",Object(J.jsx)(m.a,{className:"interact",icon:s?v.b:v.c,onClick:function(){return c(!s)}})]}),s&&Object(J.jsx)(N,{jsonWebKey:e.jsonWebKey})]})},W=(n(49),function(e){Object(b.a)(n,e);var t=Object(j.a)(n);function n(e){var r;return Object(p.a)(this,n),(r=t.call(this,e)).lastDate=new Date,r.lastSenderAddr="",r.lastType="",r.pingInterval=-1,r.privateKeyJwk=void 0,r.publicKeyJwk=void 0,r.publicKeyQueue=[],r.senderData={},r.socket=void 0,r.setUpSocket=function(){r.setState({socketReadyState:0});var e=new WebSocket("wss://guarded-wave-42520.herokuapp.com",r.props.location.pathname.replace(/\//gi,"-"));return e.onopen=function(){(function(){return S.apply(this,arguments)})().then((function(e){var t=e.publicKeyJwk,n=e.privateKeyJwk;r.publicKeyJwk=t,r.privateKeyJwk=n,r.send(r.formatPublicKeyMessage()),r.publicKeyQueue.forEach(r.processPublicKey),r.forceUpdate()})),r.addChat(Object(J.jsxs)("span",{children:["You have joined the chat room ",Object(J.jsx)("span",{className:"blob",children:r.props.location.pathname})]}),"self","meta"),r.setState({socketReadyState:e.readyState}),clearInterval(r.pingInterval),r.pingInterval=window.setInterval((function(){return r.socket.send("")}),3e4)},e.onmessage=function(){var e=Object(h.a)(l.a.mark((function e(t){return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,r.processSocketMessage(t);case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),console.error(e.t0);case 8:case"end":return e.stop()}}),e,null,[[0,5]])})));return function(t){return e.apply(this,arguments)}}(),e.onclose=function(){r.setState({socketReadyState:e.readyState})},e},r.breakdownSocket=function(){r.socket.close(),r.senderData={}},r.send=function(e){r.socket.send(JSON.stringify(e))},r.formatPublicKeyMessage=function(){return{public_key:r.publicKeyJwk}},r.processSocketMessage=function(){var e=Object(h.a)(l.a.mark((function e(t){var n,s,c,i,a,o;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(n=JSON.parse(t.data)).hasOwnProperty("cipher")){e.next=14;break}return s=n,e.t0=r,e.t1=s.cipher,e.t2=s.initialization_vector,e.next=8,D(s,r.senderData[s.sender_addr].derivedKey);case 8:e.t3=e.sent,e.t4=[e.t1,e.t2,e.t3],e.t5=s.sender_addr,e.t0.addChat.call(e.t0,e.t4,e.t5,"encrypted"),e.next=37;break;case 14:if(!n.hasOwnProperty("meta")){e.next=21;break}i=(c=n).meta===K.connected,r.addChat("Client ".concat(c.sender_addr," ").concat(i?"":"dis","connected"),c.sender_addr,"meta"),i?r.send(r.formatPublicKeyMessage()):delete r.senderData[c.sender_addr],e.next=37;break;case 21:if(!n.hasOwnProperty("plaintext")){e.next=26;break}a=n,r.addChat(a.plaintext,a.sender_addr,"plaintext"),e.next=37;break;case 26:if(!n.hasOwnProperty("public_key")){e.next=36;break}if(o=n,!r.privateKeyJwk){e.next=33;break}return e.next=31,r.processPublicKey(o);case 31:e.next=34;break;case 33:r.publicKeyQueue.push(o);case 34:e.next=37;break;case 36:console.warn("Unexpected message",n);case 37:r.setState({socketReadyState:r.socket.readyState});case 38:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),r.processPublicKey=function(){var e=Object(h.a)(l.a.mark((function e(t){var n,s;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.public_key,s=t.sender_addr,e.next=3,C(n,r.privateKeyJwk);case 3:e.t0=e.sent,e.t1=n,r.senderData[s]={derivedKey:e.t0,publicKeyJwk:e.t1},r.addChat("Received Client ".concat(s,"'s public key"),s,"meta");case 7:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),r.addChat=function(e,t,n){var s=new Date,c={content:e,date:s,senderAddr:t,showSenderAddr:r.lastSenderAddr!==t||r.lastType!==n,type:n};r.lastDate=s,r.lastSenderAddr=c.senderAddr,r.lastType=c.type,r.setState({chats:r.state.chats.concat(c)})},r.getConnectionStatus=function(){switch(r.state.socketReadyState){case 0:return"Connecting";case 1:return"Connected";case 2:return"Closing";default:return"Closed"}},r.submitMessage=function(e){e.preventDefault();var t=r.state.input.trim();if(t){if(r.state.encrypt)Object.entries(r.senderData).forEach(function(){var e=Object(h.a)(l.a.mark((function e(n){var s,c,i,d;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return s=Object(o.a)(n,2),c=s[0],i=s[1],e.t0=a.a,e.t1=a.a,e.t2={},e.next=6,k(t,i.derivedKey);case 6:e.t3=e.sent,e.t4=(0,e.t1)(e.t2,e.t3),e.t5={},e.t6={recv_addr:c},d=(0,e.t0)(e.t4,e.t5,e.t6),r.send(d);case 12:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}());else{var n={plaintext:t};r.send(n)}r.addChat(t,"self",r.state.encrypt?"encrypted":"plaintext"),r.setState({input:""})}},r.newRoomSubmit=function(e){e.preventDefault();var t=encodeURIComponent(r.state.newRoom);r.props.history.push(t)},r.state={encrypt:!0,input:"",chats:[],newRoom:"",socketReadyState:0},r.privateKeyJwk=null,r.socket=null,r.publicKeyJwk=null,r}return Object(u.a)(n,[{key:"componentDidMount",value:function(){this.socket=this.setUpSocket()}},{key:"componentDidUpdate",value:function(e){e.location.pathname!==this.props.location.pathname&&(this.breakdownSocket(),this.socket=this.setUpSocket())}},{key:"componentWillUnmount",value:function(){this.breakdownSocket()}},{key:"render",value:function(){var e=this,t=this.state.encrypt,n=this.getConnectionStatus(),r=Object.entries(this.senderData);return Object(J.jsxs)("div",{id:"App",children:[Object(J.jsxs)("div",{id:"main",children:[Object(J.jsxs)("div",{id:"content",children:[Object(J.jsxs)("div",{id:"header",children:["Current Room: ",Object(J.jsx)("span",{className:"blob",children:this.props.location.pathname})," ",Object(J.jsx)("span",{className:"blob  ".concat(n),children:n})]}),Object(J.jsx)("div",{id:"chat-container",children:Object(J.jsx)("div",{children:this.state.chats.map((function(e,t){return Object(J.jsx)(I,Object(a.a)({},e),t)}))})}),Object(J.jsx)("div",{id:"chat-form-container",children:Object(J.jsxs)("form",{id:"chat-form",onSubmit:this.submitMessage,children:[Object(J.jsx)("input",{autoFocus:!0,onChange:function(t){return e.setState({input:t.target.value})},placeholder:"Aa",value:this.state.input}),Object(J.jsx)("button",{type:"submit",disabled:1!==this.state.socketReadyState,children:"Send"})]})})]}),Object(J.jsxs)("div",{id:"sidebar",children:[Object(J.jsxs)("h2",{children:["End-to-End Encrypted React - Rust Chat App \xa0",Object(J.jsx)(P,{href:"https://github.com/harryli0088/rust-react-chat",children:Object(J.jsx)(m.a,{className:"interact",icon:f.a,style:{color:"white"}})})]}),Object(J.jsxs)("p",{children:["Version ",x.version]}),Object(J.jsx)("p",{children:"I created this chat room prototype to learn how to use Rust and about end-to-end encryption."}),Object(J.jsxs)("p",{id:"disclaimer",children:[Object(J.jsx)("b",{children:"DISCLAIMER:"})," This is probably not a cyrptographically secure system and has not been validated by security experts. This is just a side project for me to learn about end-to-end encryption."]}),Object(J.jsx)("p",{children:"(Note: Heroku free tier server takes several seconds to wake up from sleep mode)"}),Object(J.jsx)("hr",{}),Object(J.jsxs)("form",{id:"new-room-form",onSubmit:this.newRoomSubmit,children:[Object(J.jsx)("input",{id:"new-room-input",onChange:function(t){return e.setState({newRoom:t.target.value})},placeholder:"Pick a new room name",value:this.state.newRoom}),"\xa0",Object(J.jsxs)("button",{type:"submit",children:["Change Rooms",Object(J.jsx)(m.a,{icon:v.a})]})]}),Object(J.jsx)("hr",{}),Object(J.jsxs)("div",{style:{display:"flex",alignItems:"center"},children:[Object(J.jsx)("label",{htmlFor:"toggle-encrypt",style:{cursor:"pointer"},children:"Encrypt Messages:"})," \xa0",Object(J.jsx)("input",{id:"toggle-encrypt",type:"checkbox",checked:t,onChange:function(){return e.setState({encrypt:!t})},style:{height:"1em"}})]}),Object(J.jsxs)("div",{className:"blob ".concat(t?"green":"red"),style:{textAlign:"center"},children:["Your messages will ",!1===t&&"not"," be encrypted \xa0",Object(J.jsx)(m.a,{icon:t?v.e:v.f})]}),this.publicKeyJwk&&Object(J.jsxs)(s.a.Fragment,{children:[Object(J.jsxs)("h4",{children:["Your Public Key ",Object(J.jsx)(m.a,{icon:v.d})]}),Object(J.jsx)(N,{jsonWebKey:this.publicKeyJwk}),Object(J.jsx)("br",{})]}),this.privateKeyJwk&&Object(J.jsx)(B,{jsonWebKey:this.privateKeyJwk}),Object(J.jsx)("hr",{}),Object(J.jsxs)("div",{children:[Object(J.jsx)("h3",{children:"Connected Clients"}),r.length>0?r.map((function(e){var t=Object(o.a)(e,2),n=t[0],r=t[1],s=r.publicKeyJwk,c=r.derivedKey;return Object(J.jsx)(M,{derivedKey:c,publicKeyJwk:s,senderAddr:n},n)})):Object(J.jsx)("div",{children:"There are no other connected clients"})]})]})]}),Object(J.jsxs)("div",{id:"description",className:"container",children:[Object(J.jsxs)("h2",{children:["Rust Overview ",Object(J.jsx)(m.a,{icon:f.b})]}),Object(J.jsx)("p",{children:"The Rust server features include:"}),Object(J.jsxs)("ul",{children:[Object(J.jsx)("li",{children:"WebSocket server"}),Object(J.jsx)("li",{children:"Chat rooms via routes (via WebSocket protocol)"}),Object(J.jsx)("li",{children:"Alerts when a client connects or disconnects"}),Object(J.jsx)("li",{children:"Broadcast or targeted messages"})]}),Object(J.jsx)("hr",{}),Object(J.jsxs)("h2",{children:["End-to-End Encryption Overview ",Object(J.jsx)(m.a,{icon:v.e})]}),Object(J.jsx)("h3",{children:"Intro"}),Object(J.jsxs)("p",{children:["This is an end-to-end encrypted chat app that uses the ",Object(J.jsx)(P,{href:"https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto",children:"Subtle Web Crypto API"})," for encryption and sends messages to other clients via a Rust WebSocket server. I followed ",Object(J.jsx)(P,{href:"https://getstream.io/blog/web-crypto-api-chat/",children:"this Stream tutorial"})," to implement the encryption logic."]}),Object(J.jsx)("h3",{children:"Ephemeral Key Generation"}),Object(J.jsxs)("p",{children:["A client called Alice generates a public key and private key using the ",Object(J.jsx)(P,{href:"https://en.wikipedia.org/wiki/Elliptic-curve_Diffie%E2%80%93Hellman",children:"Elliptic Curve Diffie-Hellman (ECDH)"})," algorithm, which enables 2 people to share their public keys and generate a shared secret symmetric key for encryption. Alice creates these ephemeral keys when connecting to this website and deletes her keys once she disconnects."]}),Object(J.jsx)("h3",{children:"Public Key Broadcasting"}),Object(J.jsx)("p",{children:"Once Alice opens this site, connects with the server, and generates a key-pair, she sends her public key to the WebSocket server. The server then broadcasts the public key to the other clients in the room. In turn, the other clients also send their public keys to Alice, so that every client has the public keys of all the other clients."}),Object(J.jsx)("h3",{children:"Deriving a Shared Secret Symmetric Key"}),Object(J.jsxs)("p",{children:["When Alice receives a public key from another client Bob, Alice combines his ",Object(J.jsx)("i",{children:"public"})," key with her own ",Object(J.jsx)("i",{children:"private"})," key to derive a new key. Bob combines Alice's public key with his private key to also derive a new key. Because of the Diffie-Hellman algorithm, Alice and Bob actually end up separately deriving the ",Object(J.jsx)("i",{children:"same symmetric key"})," which they can use to encrypt their messages to each other. As long as Alice and Bob protect their own private keys, it is computationally infeasible for someone else to calculate their secret symmetric key."]}),Object(J.jsx)("h3",{children:"Encryption/Decryption"}),Object(J.jsxs)("p",{children:["Encryption is done using the Advanced Encryption Standard - Galois/Counter Mode (",Object(J.jsx)(P,{href:"https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf",children:"AES-GCM"}),") algorithm, which uses a randomly generated initialization vector to convert the plaintext message into an encrypted ciphertext. When Alice wants to send an encrypted message, she encrypts the plaintext message for every separate recipient. She sends a ciphertext, the initialization vector, and the recipient address to the server, which routes the targeted message to the intended recipient."]}),Object(J.jsx)("p",{children:"When Bob receives an encrypted message from Alice, he uses their derived symmetric key to decrypt the message."}),Object(J.jsx)("h3",{children:"Message Integrity"}),Object(J.jsxs)("p",{children:["How do we know that a malicious attacker/server Eve didn't tamper with the message in-transit, aka a ",Object(J.jsx)(P,{href:"https://en.wikipedia.org/wiki/Man-in-the-middle_attack",children:"man-in-the-middle attack"}),"? Symmetric encryption schemes could use ",Object(J.jsx)(P,{href:"https://en.wikipedia.org/wiki/Message_authentication_code",children:"message authentication codes"}),". The nice thing about AES-GCM is that it handles message integrity; if Eve tampers with the message, the decryption process will probably fail (",Object(J.jsx)(P,{href:"https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf",children:"see this document, page 26"}),")."]}),Object(J.jsx)("h3",{children:"Out-of-Band Verification"}),Object(J.jsxs)("p",{children:["How do we know that the server isn't faking the public keys? It's possible for a malicious server Eve to break the encryption by simply generating her own keys and intercepting mesages. When Alice sends her public key to Bob, Eve stores it, but then sends ",Object(J.jsx)("i",{children:"Eve's"})," public key to Bob, pretending that it's Alice's. Eve also takes Bob's public key, but sends ",Object(J.jsx)("i",{children:"Eve's"})," public key to Alice. In this way, Eve can intercept a message from Alice, decrypt it, then re-encrypt it to send to Bob (and vise versa). Alice and Bob would be none the wiser. It is therefore critical to validate public keys. The only way to do this is via   ",Object(J.jsx)(P,{href:"https://ssd.eff.org/en/module/key-verification",children:"out-of-band verification"}),". Alice and Bob need to communicate in some way outside this app and verify each other's keys (ie over the phone, QR codes, etc). Signal implements this with ",Object(J.jsx)(P,{href:"https://support.signal.org/hc/en-us/articles/360007060632-What-is-a-safety-number-and-why-do-I-see-that-it-changed-",children:"safety numbers"}),"."]})]}),Object(J.jsxs)("footer",{className:"container",children:[Object(J.jsxs)("div",{children:["Built using ",Object(J.jsx)(P,{href:"https://reactjs.org/",children:"React"}),", ",Object(J.jsx)(P,{href:"https://www.typescriptlang.org/",children:"TypeScript"}),", ",Object(J.jsx)(P,{href:"https://fontawesome.com/license",children:"Font Awesome"}),", and ",Object(J.jsx)(P,{href:"https://www.rust-lang.org/",children:"Rust"})]}),Object(J.jsx)("br",{}),Object(J.jsx)("div",{children:Object(J.jsx)(P,{href:"https://github.com/harryli0088/rust-react-chat",children:"Github Repo"})})]})]})}}]),n}(s.a.Component)),_=Object(y.d)(W),T=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,53)).then((function(t){var n=t.getCLS,r=t.getFID,s=t.getFCP,c=t.getLCP,i=t.getTTFB;n(e),r(e),s(e),c(e),i(e)}))},U=n(31);i.a.render(Object(J.jsx)(s.a.StrictMode,{children:Object(J.jsx)(U.a,{children:Object(J.jsx)(_,{})})}),document.getElementById("root")),T()}},[[52,1,2]]]);
//# sourceMappingURL=main.2a1b5078.chunk.js.map